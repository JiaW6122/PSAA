# normailze
# kg<-apply(kg,1,function(x){
# x=x/sum(x)
# return(x)
# })
kg2<-apply(kg,1,function(x){
x[x<alpha]=0
return(x)
})
# dd<-t(apply(dis,1,order))
# knestest<-dd[,2:k+1]
return(kg2)
}
coords1 = cbind(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1"]]@coordinates[["imagecol"]]))
coords2 = cbind(as.integer(visiumaddout@images[["A1.1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1.1"]]@coordinates[["imagecol"]]))
weight1<-gua_kernel_weight(coords1,alpha)
weight2<-gua_kernel_weight(coords2,alpha)
tcell_level1<-tcell_level[1:length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))]
tcell_level2<-tcell_level[(length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))+1):length(tcell_level)]
# mean antigen
antigen_mean<-(output[['M_3']]+output[['M_4']]+output[['M_5']]+output[['M_6']]+output[['M_7']])/4
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = antigen_mean,
col.name = "ant_mean"
)
antigen_mean1<-antigen_mean[1:length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))]
antigen_mean2<-antigen_mean[(length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))+1):length(tcell_level)]
# plot_lisa(antigen_amp1[,1],tcell_amp1[,1],weight1,coords1,'lisa1',tcell_level1)
# plot_lisa(antigen_amp2[,1],tcell_amp2[,1],weight2,coords2,'lisa2',tcell_level2)
# plot_regression(tcell_level1,tcell_level2,antigen_mean1,antigen_mean2,weight1,weight2,"regression")
pdf(paste0(paste0(name,"_plot"), '_regression.pdf'))
W1<- as(weight1, "symmetricMatrix")
W1<- as.matrix(W1/rowSums(W1))
# ant1 <- scale(antigen_mean1)[, 1]
# tcell1 <- scale(tcell_level1)[, 1]
W1[which(is.na(W1))] <- 0
# position<-which(ant1>=0)
# ant1<-ant1[position]
# tcell1<-tcell1[position]
ant1<-antigen_mean1
tcell1<-tcell_level1
tcell1[which(is.na(tcell1))] <- 0
W2<- as(weight2, "symmetricMatrix")
W2<- as.matrix(W2/rowSums(W2))
# ant2 <- scale(antigen_mean2)[, 1]
tcell2 <- scale(tcell_level2)[, 1]
W2[which(is.na(W2))] <- 0
ant2<-antigen_mean2
tcell2<-tcell_level2
s<-plot(ant1,W1%*%tcell1,
main=strsplit(name, "all")[[1]][[2]],
xlab="Mean Antigen Level",
ylab="Nearby T Cell Level",
col="steelblue")
points(ant2,W2%*%tcell2,col="orange")
legend("topright",
pch = c(1,1),
c("Pustule","Wound"),
col = c("steelblue","orange"))
abline(lm(W1%*%tcell1~ant1),col="steelblue",lwd=2)
abline(lm(W2%*%tcell2~ant2),col="orange",lwd=2)
print(s)
dev.off()
# save into data
data[[name]]<-list()
data[[name]]$tcell_level1<-tcell_level1
data[[name]]$tcell_level2<-tcell_level2
data[[name]]$antigen_mean1<-antigen_mean1
data[[name]]$antigen_mean2<-antigen_mean2
data[[name]]$coords1<-coords1
data[[name]]$coords2<-coords2
filenames
x="mhc2_normalized_all/all482_1_module7_cell1674_batch1674_LR0.008_epoch100_SCimpute_F_lambBal1_lambSca1_lambCellCor1_lambModCor_1e-2_20230711-004759.csv"
x2="mhc2_normalized_all/all482_2_module7_cell1815_batch1815_LR0.008_epoch100_SCimpute_F_lambBal1_lambSca1_lambCellCor1_lambModCor_1e-2_20230711-004839.csv"
output<-read.csv(x)
name0<-strsplit(x,'/')[[1]][[2]]
name<-strsplit(name0,"_module7")[[1]][[1]]
print(name)
M<-c('M_1','M_2','M_3','M_4','M_5','M_6','M_7')
visiumaddout<-readRDS(paste0("/Users/jw316/Documents/antigen\ presentation\ project/mhc2/cleanSkinData/",name,'.rds'))
addfeature<-function(m){
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = output[[m]],
col.name = m
)
return(visiumaddout)
}
for (i in 1:length(M)) {
visiumaddout<-addfeature(M[i])
}
# Plot and save image(Genes)
draw<-function(g){
if(g %in% rownames(visiumaddout)){
png(paste0(paste0(name,"_plot/"), g, '.png'))
s<-SpatialFeaturePlot(visiumaddout, features = g)
print(s)
# plot(1)
#dev.copy(jpeg,filename=paste0("plot", g, '.jpg'))
dev.off()
}
}
# Plot and save image(M)
draw2<-function(g){
png(paste0(paste0(name,"_plot/"), g, '.png'))
s<-SpatialFeaturePlot(visiumaddout, features = g)
print(s)
# plot(1)
#dev.copy(jpeg,filename=paste0("plot", g, '.jpg'))
dev.off()
}
# dir.create(paste0(name,"_plot"))
# sapply(TCGA_core_list$`T CD4+ cell`,draw)
# sapply(M, draw2)
tcell_cen<-function(visium,TCGA_core_list){
# FetchData can pull anything from expression matrices, cell embeddings, or metadata
# get gene expression using gene name
tcell_gene<-TCGA_core_list$`T CD4+ cell`
data=as.data.frame(GetAssayData(object = visiumaddout,slot = "counts"))
data=apply(data,2,function(x){return(log((x/sum(x))*10^5+1))})
tcell_level<-sapply(tcell_gene,function(x){return(data[x,])})
tl<-matrix(unlist(tcell_level),ncol=length(TCGA_core_list$`T CD4+ cell`))
mean_level<-apply(tl, 1, mean)
return(mean_level)
}
coords = cbind(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1"]]@coordinates[["imagecol"]]))
tcell_level<-tcell_cen(visiumaddout,TCGA_core_list)
# plot mean tcell
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = tcell_level,
col.name = "tcell"
)
# signal amplify
k=30 # the number of neighbors we want to use
alpha=0.98 # the threshold of weight
# compute Gaussian kernel weight matrix
sigma=100
gua_kernel_weight<-function(coords,alpha){
dis<-distance(coords,method = 'euclidean')
kg<-exp(-dis/(2*sigma^2))
# normailze
# kg<-apply(kg,1,function(x){
# x=x/sum(x)
# return(x)
# })
kg2<-apply(kg,1,function(x){
x[x<alpha]=0
return(x)
})
# dd<-t(apply(dis,1,order))
# knestest<-dd[,2:k+1]
return(kg2)
}
coords1 = cbind(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1"]]@coordinates[["imagecol"]]))
coords2 = cbind(as.integer(visiumaddout@images[["A1.1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1.1"]]@coordinates[["imagecol"]]))
weight1<-gua_kernel_weight(coords1,alpha)
weight2<-gua_kernel_weight(coords2,alpha)
tcell_level1<-tcell_level[1:length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))]
tcell_level2<-tcell_level[(length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))+1):length(tcell_level)]
# mean antigen
antigen_mean<-(output[['M_3']]+output[['M_4']]+output[['M_5']]+output[['M_6']]+output[['M_7']])/4
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = antigen_mean,
col.name = "ant_mean"
)
antigen_mean1<-antigen_mean[1:length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))]
antigen_mean2<-antigen_mean[(length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))+1):length(tcell_level)]
output<-read.csv(x2)
name0<-strsplit(x2,'/')[[1]][[2]]
name<-strsplit(name0,"_module7")[[1]][[1]]
print(name)
M<-c('M_1','M_2','M_3','M_4','M_5','M_6','M_7')
visiumaddout<-readRDS(paste0("/Users/jw316/Documents/antigen\ presentation\ project/mhc2/cleanSkinData/",name,'.rds'))
addfeature<-function(m){
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = output[[m]],
col.name = m
)
return(visiumaddout)
}
for (i in 1:length(M)) {
visiumaddout<-addfeature(M[i])
}
# Plot and save image(Genes)
draw<-function(g){
if(g %in% rownames(visiumaddout)){
png(paste0(paste0(name,"_plot/"), g, '.png'))
s<-SpatialFeaturePlot(visiumaddout, features = g)
print(s)
# plot(1)
#dev.copy(jpeg,filename=paste0("plot", g, '.jpg'))
dev.off()
}
}
# Plot and save image(M)
draw2<-function(g){
png(paste0(paste0(name,"_plot/"), g, '.png'))
s<-SpatialFeaturePlot(visiumaddout, features = g)
print(s)
# plot(1)
#dev.copy(jpeg,filename=paste0("plot", g, '.jpg'))
dev.off()
}
# dir.create(paste0(name,"_plot"))
# sapply(TCGA_core_list$`T CD4+ cell`,draw)
# sapply(M, draw2)
tcell_cen<-function(visium,TCGA_core_list){
# FetchData can pull anything from expression matrices, cell embeddings, or metadata
# get gene expression using gene name
tcell_gene<-TCGA_core_list$`T CD4+ cell`
data=as.data.frame(GetAssayData(object = visiumaddout,slot = "counts"))
data=apply(data,2,function(x){return(log((x/sum(x))*10^5+1))})
tcell_level<-sapply(tcell_gene,function(x){return(data[x,])})
tl<-matrix(unlist(tcell_level),ncol=length(TCGA_core_list$`T CD4+ cell`))
mean_level<-apply(tl, 1, mean)
return(mean_level)
}
coords_2 = cbind(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1"]]@coordinates[["imagecol"]]))
tcell_level_2<-tcell_cen(visiumaddout,TCGA_core_list)
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = tcell_level_2,
col.name = "tcell"
)
coords3 = cbind(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1"]]@coordinates[["imagecol"]]))
coords4 = cbind(as.integer(visiumaddout@images[["A1.1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1.1"]]@coordinates[["imagecol"]]))
tcell_level3<-tcell_level_2[1:length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))]
tcell_level4<-tcell_level_2[(length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))+1):length(tcell_level)]
# mean antigen
antigen_mean<-(output[['M_3']]+output[['M_4']]+output[['M_5']]+output[['M_6']]+output[['M_7']])/4
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = antigen_mean,
col.name = "ant_mean"
)
antigen_mean3<-antigen_mean[1:length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))]
antigen_mean4<-antigen_mean[(length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))+1):length(tcell_level)]
name="all482_pu2_wo1"
data[[name]]$tcell_level1<-tcell_level3
data[[name]]$tcell_level2<-tcell_level2
data[[name]]$antigen_mean1<-antigen_mean3
data[[name]]$antigen_mean2<-antigen_mean2
data[[name]]$coords1<-coords3
data[[name]]$coords2<-coords2
filenames
x="mhc2_normalized_all/all483_1_module7_cell1832_batch1832_LR0.008_epoch100_SCimpute_F_lambBal1_lambSca1_lambCellCor1_lambModCor_1e-2_20230711-004919.csv"
output<-read.csv(x)
name0<-strsplit(x,'/')[[1]][[2]]
name<-strsplit(name0,"_module7")[[1]][[1]]
print(name)
M<-c('M_1','M_2','M_3','M_4','M_5','M_6','M_7')
visiumaddout<-readRDS(paste0("/Users/jw316/Documents/antigen\ presentation\ project/mhc2/cleanSkinData/",name,'.rds'))
addfeature<-function(m){
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = output[[m]],
col.name = m
)
return(visiumaddout)
}
for (i in 1:length(M)) {
visiumaddout<-addfeature(M[i])
}
# Plot and save image(Genes)
draw<-function(g){
if(g %in% rownames(visiumaddout)){
png(paste0(paste0(name,"_plot/"), g, '.png'))
s<-SpatialFeaturePlot(visiumaddout, features = g)
print(s)
# plot(1)
#dev.copy(jpeg,filename=paste0("plot", g, '.jpg'))
dev.off()
}
}
# Plot and save image(M)
draw2<-function(g){
png(paste0(paste0(name,"_plot/"), g, '.png'))
s<-SpatialFeaturePlot(visiumaddout, features = g)
print(s)
# plot(1)
#dev.copy(jpeg,filename=paste0("plot", g, '.jpg'))
dev.off()
}
# dir.create(paste0(name,"_plot"))
# sapply(TCGA_core_list$`T CD4+ cell`,draw)
# sapply(M, draw2)
tcell_cen<-function(visium,TCGA_core_list){
# FetchData can pull anything from expression matrices, cell embeddings, or metadata
# get gene expression using gene name
tcell_gene<-TCGA_core_list$`T CD4+ cell`
data=as.data.frame(GetAssayData(object = visiumaddout,slot = "counts"))
data=apply(data,2,function(x){return(log((x/sum(x))*10^5+1))})
tcell_level<-sapply(tcell_gene,function(x){return(data[x,])})
tl<-matrix(unlist(tcell_level),ncol=length(TCGA_core_list$`T CD4+ cell`))
mean_level<-apply(tl, 1, mean)
return(mean_level)
}
coords = cbind(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1"]]@coordinates[["imagecol"]]))
tcell_level<-tcell_cen(visiumaddout,TCGA_core_list)
# plot mean tcell
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = tcell_level,
col.name = "tcell"
)
# signal amplify
k=30 # the number of neighbors we want to use
alpha=0.98 # the threshold of weight
# compute Gaussian kernel weight matrix
sigma=100
gua_kernel_weight<-function(coords,alpha){
dis<-distance(coords,method = 'euclidean')
kg<-exp(-dis/(2*sigma^2))
# normailze
# kg<-apply(kg,1,function(x){
# x=x/sum(x)
# return(x)
# })
kg2<-apply(kg,1,function(x){
x[x<alpha]=0
return(x)
})
# dd<-t(apply(dis,1,order))
# knestest<-dd[,2:k+1]
return(kg2)
}
coords1 = cbind(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1"]]@coordinates[["imagecol"]]))
coords2 = cbind(as.integer(visiumaddout@images[["A1.1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1.1"]]@coordinates[["imagecol"]]))
weight1<-gua_kernel_weight(coords1,alpha)
weight2<-gua_kernel_weight(coords2,alpha)
tcell_level1<-tcell_level[1:length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))]
tcell_level2<-tcell_level[(length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))+1):length(tcell_level)]
# mean antigen
antigen_mean<-(output[['M_3']]+output[['M_4']]+output[['M_5']]+output[['M_6']]+output[['M_7']])/4
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = antigen_mean,
col.name = "ant_mean"
)
antigen_mean1<-antigen_mean[1:length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))]
antigen_mean2<-antigen_mean[(length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))+1):length(tcell_level)]
filenames
x="mhc2_normalized_all/all483_2_module7_cell2082_batch2082_LR0.008_epoch100_SCimpute_F_lambBal1_lambSca1_lambCellCor1_lambModCor_1e-2_20230711-005003.csv"
output<-read.csv(x)
name0<-strsplit(x,'/')[[1]][[2]]
name<-strsplit(name0,"_module7")[[1]][[1]]
print(name)
M<-c('M_1','M_2','M_3','M_4','M_5','M_6','M_7')
visiumaddout<-readRDS(paste0("/Users/jw316/Documents/antigen\ presentation\ project/mhc2/cleanSkinData/",name,'.rds'))
addfeature<-function(m){
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = output[[m]],
col.name = m
)
return(visiumaddout)
}
for (i in 1:length(M)) {
visiumaddout<-addfeature(M[i])
}
# Plot and save image(Genes)
draw<-function(g){
if(g %in% rownames(visiumaddout)){
png(paste0(paste0(name,"_plot/"), g, '.png'))
s<-SpatialFeaturePlot(visiumaddout, features = g)
print(s)
# plot(1)
#dev.copy(jpeg,filename=paste0("plot", g, '.jpg'))
dev.off()
}
}
# Plot and save image(M)
draw2<-function(g){
png(paste0(paste0(name,"_plot/"), g, '.png'))
s<-SpatialFeaturePlot(visiumaddout, features = g)
print(s)
# plot(1)
#dev.copy(jpeg,filename=paste0("plot", g, '.jpg'))
dev.off()
}
# dir.create(paste0(name,"_plot"))
# sapply(TCGA_core_list$`T CD4+ cell`,draw)
# sapply(M, draw2)
tcell_cen<-function(visium,TCGA_core_list){
# FetchData can pull anything from expression matrices, cell embeddings, or metadata
# get gene expression using gene name
tcell_gene<-TCGA_core_list$`T CD4+ cell`
data=as.data.frame(GetAssayData(object = visiumaddout,slot = "counts"))
data=apply(data,2,function(x){return(log((x/sum(x))*10^5+1))})
tcell_level<-sapply(tcell_gene,function(x){return(data[x,])})
tl<-matrix(unlist(tcell_level),ncol=length(TCGA_core_list$`T CD4+ cell`))
mean_level<-apply(tl, 1, mean)
return(mean_level)
}
coords = cbind(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1"]]@coordinates[["imagecol"]]))
tcell_level<-tcell_cen(visiumaddout,TCGA_core_list)
# plot mean tcell
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = tcell_level,
col.name = "tcell"
)
# signal amplify
k=30 # the number of neighbors we want to use
alpha=0.98 # the threshold of weight
# compute Gaussian kernel weight matrix
sigma=100
gua_kernel_weight<-function(coords,alpha){
dis<-distance(coords,method = 'euclidean')
kg<-exp(-dis/(2*sigma^2))
# normailze
# kg<-apply(kg,1,function(x){
# x=x/sum(x)
# return(x)
# })
kg2<-apply(kg,1,function(x){
x[x<alpha]=0
return(x)
})
# dd<-t(apply(dis,1,order))
# knestest<-dd[,2:k+1]
return(kg2)
}
coords3 = cbind(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1"]]@coordinates[["imagecol"]]))
coords4 = cbind(as.integer(visiumaddout@images[["A1.1"]]@coordinates[["imagerow"]]), as.integer(visiumaddout@images[["A1.1"]]@coordinates[["imagecol"]]))
tcell_level3<-tcell_level[1:length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))]
tcell_level4<-tcell_level[(length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))+1):length(tcell_level)]
# mean antigen
antigen_mean<-(output[['M_3']]+output[['M_4']]+output[['M_5']]+output[['M_6']]+output[['M_7']])/4
visiumaddout<-AddMetaData(
object = visiumaddout,
metadata = antigen_mean,
col.name = "ant_mean"
)
antigen_mean3<-antigen_mean[1:length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))]
antigen_mean4<-antigen_mean[(length(as.integer(visiumaddout@images[["A1"]]@coordinates[["imagerow"]]))+1):length(tcell_level)]
name="all483_pu1_wo2"
# save into data
data[[name]]<-list()
data[[name]]$tcell_level1<-tcell_level1
data[[name]]$tcell_level2<-tcell_level4
data[[name]]$antigen_mean1<-antigen_mean1
data[[name]]$antigen_mean2<-antigen_mean4
data[[name]]$coords1<-coords1
data[[name]]$coords2<-coords4
saveRDS(data,"new_spatial_data.rds")
data
rownames(data)
colnames(data)
group<-rep("all479_1",length(data[["all479_1"]]$tcell_level1)+length(data[["all479_1"]]$tcell_level2))
group<-append(group,rep("all481_2_new",length(data[["all481_2_new"]]$tcell_level1)+length(data[["all481_2_new"]]$tcell_level2)))
group<-append(group,rep("all482_pu2_wo1",length(data[["all482_pu2_wo1"]]$tcell_level1)+length(data[["all482_pu2_wo1"]]$tcell_level2)))
group<-append(group,rep("all483_pu1_wo2",length(data[["all483_pu1_wo2"]]$tcell_level1)+length(data[["all483_pu1_wo2"]]$tcell_level2)))
tcell_all<-data[["all479_1"]]$tcell_level1
tcell_all<-append(tcell_all,data[["all479_1"]]$tcell_level2)
tcell_all<-append(tcell_all,data[["all481_2_new"]]$tcell_level1)
tcell_all<-append(tcell_all,data[["all481_2_new"]]$tcell_level2)
tcell_all<-append(tcell_all,data[["all482_pu2_wo1"]]$tcell_level1)
tcell_all<-append(tcell_all,data[["all482_pu2_wo1"]]$tcell_level2)
tcell_all<-append(tcell_all,data[["all483_pu1_wo2"]]$tcell_level1)
tcell_all<-append(tcell_all,data[["all483_pu1_wo2"]]$tcell_level2)
antigen_all<-data[["all479_1"]]$antigen_mean1
antigen_all<-append(antigen_all,data[["all479_1"]]$antigen_mean2)
antigen_all<-append(antigen_all,data[["all481_2_new"]]$antigen_mean1)
antigen_all<-append(antigen_all,data[["all481_2_new"]]$antigen_mean2)
antigen_all<-append(antigen_all,data[["all482_pu2_wo1"]]$antigen_mean1)
antigen_all<-append(antigen_all,data[["all482_pu2_wo1"]]$antigen_mean2)
antigen_all<-append(antigen_all,data[["all483_pu1_wo2"]]$antigen_mean1)
antigen_all<-append(antigen_all,data[["all483_pu1_wo2"]]$antigen_mean2)
class<-rep("Pustule",length(data[["all479_1"]]$tcell_level1))
class<-append(class,rep("Wound",length(data[["all479_1"]]$tcell_level2)))
class<-append(class,rep("Pustule",length(data[["all481_2_new"]]$tcell_level1)))
class<-append(class,rep("Wound",length(data[["all481_2_new"]]$tcell_level2)))
class<-append(class,rep("Pustule",length(data[["all482_pu2_wo1"]]$tcell_level1)))
class<-append(class,rep("Wound",length(data[["all482_pu2_wo1"]]$tcell_level2)))
class<-append(class,rep("Pustule",length(data[["all483_pu1_wo2"]]$tcell_level1)))
class<-append(class,rep("Wound",length(data[["all483_pu1_wo2"]]$tcell_level2)))
df<-data.frame(group,tcell_all,class)
ggplot(df,aes(x=group,y=tcell_all,fill=class)) +
geom_boxplot()+
ylab("T Cell Level")+
scale_fill_brewer(palette="Pastel1")+
theme_bw()+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA,size = 1))
ggplot(df,aes(x=group,y=tcell_all,fill=class)) +
geom_boxplot()+
ylab("T Cell Level")+
scale_fill_brewer(palette="Pastel1")+
theme_bw()+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA,size = 1))
ggplot(df,aes(x=group,y=antigen_all,fill=class)) +
geom_boxplot()+
ylab("Mean Antigen Level")+
scale_fill_brewer(palette="Pastel1")+
theme_bw()+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA,size = 1))
